# Generated by Django 5.1.6 on 2025-03-18 11:52

import datetime
import django.core.files.storage
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Dokumenty')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('model', models.CharField(max_length=255, verbose_name='Model')),
                ('serial_number', models.CharField(max_length=255, verbose_name='Nr seryjny')),
                ('inventory_number', models.CharField(max_length=255, verbose_name='Nr inwentarzowy')),
                ('udt_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nr UDT')),
                ('group', models.IntegerField(blank=True, choices=[(1, 'Aparatura medyczna'), (2, 'Sprzęt pomiarowy'), (3, 'Infrastruktura'), (4, 'Sprzęt IT')], default=1, null=True, verbose_name='Grupa')),
                ('location_place', models.CharField(blank=True, max_length=255, null=True, verbose_name='Miejsce')),
                ('date_service', models.DateField(blank=True, null=True, verbose_name='Aktualny przegląd')),
                ('date_next_service', models.DateField(blank=True, null=True, verbose_name='Następny przegląd')),
                ('service_interval', models.PositiveIntegerField(default=1, verbose_name='Następny przegląd za')),
                ('service_interval_type', models.PositiveIntegerField(choices=[(0, 'tygodni'), (1, 'miesięcy'), (2, 'lat')], default=2, verbose_name='Rodzaj interwału')),
                ('date_manufactured', models.DateField(blank=True, null=True, verbose_name='Data produkcji')),
                ('date_bought', models.DateField(blank=True, null=True, verbose_name='Data zakupu')),
                ('date_warranty', models.DateField(blank=True, null=True, verbose_name='Data upływu gwarancji')),
                ('remarks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Uwagi')),
                ('status', models.IntegerField(choices=[(99, '-----------'), (0, 'Nowe'), (1, 'W użyciu'), (2, 'Wycofane'), (3, 'Skasowane'), (4, 'Uszkodzone')], default=0, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Urzadzenie',
                'verbose_name_plural': 'Urzadzenia',
                'ordering': ['-id'],
                'permissions': (('custom_view_device', 'Może zobaczyć swoje urządzenia'), ('view_all_devices', 'Może zobaczyć wszystkie urządzenia'), ('view_changelist_device', 'Może zobaczyć listę urządzeń (CRM)'), ('view_device_class_chart', 'Może wyświetlać wykres klas urządzeń')),
            },
        ),
        migrations.CreateModel(
            name='DeviceGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='devices/gallery', verbose_name='Zdjęcie')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Czy widoczne')),
                ('added_date', models.DateField(auto_now_add=True, verbose_name='Data dodania')),
            ],
        ),
        migrations.CreateModel(
            name='DevicePassport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='Treść')),
                ('added_date', models.DateField(default=datetime.date.today, verbose_name='Data wpisu')),
            ],
            options={
                'verbose_name': 'Wpis do paszportu',
                'verbose_name_plural': 'Wpisy do paszportu',
                'permissions': (('update_devicepassport', 'Może edytować wpisy do paszportu'), ('view_devicepassport_history', 'Może zobaczyć historię zmian wpisów do paszportu')),
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('scan', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/media/tomek/Nowy/linux3/www/django/medbay/protected_site_media'), upload_to='documents/', verbose_name='Plik')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
                ('sort', models.IntegerField(blank=True, choices=[(11, 'Akceptacja oferty'), (7, 'Certyfikat'), (8, 'Faktura'), (0, 'Instrukcja'), (1, 'Karta gwarancyjna'), (12, 'Komunikat bezpieczeństwa'), (9, 'Kasacja'), (14, 'Oferta'), (2, 'Paszport'), (6, 'Raport serwisowy'), (13, 'Umowa'), (5, 'Umowa serwisowa'), (3, 'Załącznik'), (4, 'Zlecenie'), (10, 'Zapytanie ofertowe'), (99, ' - Inny - ')], default=1, null=True, verbose_name='Rodzaj')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data dodania')),
                ('date_document', models.DateField(blank=True, null=True, verbose_name='Data dokumentu')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Numer dokumentu')),
                ('date_expiration', models.DateField(blank=True, null=True, verbose_name='Data ważności dokumentu')),
                ('date_termination', models.DateField(blank=True, null=True, verbose_name='Data wypowiedzenia')),
                ('access', models.IntegerField(choices=[(0, 'Prywatny'), (1, 'Publiczny')], default=1, verbose_name='Dostęp')),
            ],
            options={
                'verbose_name': 'Dokument',
                'verbose_name_plural': 'Dokumenty',
                'ordering': ['timestamp', 'date_document', 'name'],
                'permissions': (('custom_view_document', 'Może zobaczyć Dokument'), ('view_changelist_document', 'Może zobaczyć listę Dokumentów')),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=32, verbose_name='Symbol')),
                ('name', models.CharField(max_length=1024, verbose_name='Nazwa')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
            ],
            options={
                'verbose_name': 'Rodzaj urządzenia',
                'verbose_name_plural': 'Rodzaje urządzeń',
                'ordering': ['name', 'symbol'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalDevice',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Dokumenty')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('model', models.CharField(max_length=255, verbose_name='Model')),
                ('serial_number', models.CharField(max_length=255, verbose_name='Nr seryjny')),
                ('inventory_number', models.CharField(max_length=255, verbose_name='Nr inwentarzowy')),
                ('udt_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nr UDT')),
                ('group', models.IntegerField(blank=True, choices=[(1, 'Aparatura medyczna'), (2, 'Sprzęt pomiarowy'), (3, 'Infrastruktura'), (4, 'Sprzęt IT')], default=1, null=True, verbose_name='Grupa')),
                ('location_place', models.CharField(blank=True, max_length=255, null=True, verbose_name='Miejsce')),
                ('date_service', models.DateField(blank=True, null=True, verbose_name='Aktualny przegląd')),
                ('date_next_service', models.DateField(blank=True, null=True, verbose_name='Następny przegląd')),
                ('service_interval', models.PositiveIntegerField(default=1, verbose_name='Następny przegląd za')),
                ('service_interval_type', models.PositiveIntegerField(choices=[(0, 'tygodni'), (1, 'miesięcy'), (2, 'lat')], default=2, verbose_name='Rodzaj interwału')),
                ('date_manufactured', models.DateField(blank=True, null=True, verbose_name='Data produkcji')),
                ('date_bought', models.DateField(blank=True, null=True, verbose_name='Data zakupu')),
                ('date_warranty', models.DateField(blank=True, null=True, verbose_name='Data upływu gwarancji')),
                ('remarks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Uwagi')),
                ('status', models.IntegerField(choices=[(99, '-----------'), (0, 'Nowe'), (1, 'W użyciu'), (2, 'Wycofane'), (3, 'Skasowane'), (4, 'Uszkodzone')], default=0, verbose_name='Status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Urzadzenie',
                'verbose_name_plural': 'historical Urzadzenia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDeviceGallery',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('image', models.TextField(max_length=100, verbose_name='Zdjęcie')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Czy widoczne')),
                ('added_date', models.DateField(blank=True, editable=False, verbose_name='Data dodania')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical device gallery',
                'verbose_name_plural': 'historical device gallerys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDevicePassport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('content', models.TextField(blank=True, verbose_name='Treść')),
                ('added_date', models.DateField(default=datetime.date.today, verbose_name='Data wpisu')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Wpis do paszportu',
                'verbose_name_plural': 'historical Wpisy do paszportu',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('scan', models.TextField(blank=True, max_length=100, null=True, verbose_name='Plik')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
                ('sort', models.IntegerField(blank=True, choices=[(11, 'Akceptacja oferty'), (7, 'Certyfikat'), (8, 'Faktura'), (0, 'Instrukcja'), (1, 'Karta gwarancyjna'), (12, 'Komunikat bezpieczeństwa'), (9, 'Kasacja'), (14, 'Oferta'), (2, 'Paszport'), (6, 'Raport serwisowy'), (13, 'Umowa'), (5, 'Umowa serwisowa'), (3, 'Załącznik'), (4, 'Zlecenie'), (10, 'Zapytanie ofertowe'), (99, ' - Inny - ')], default=1, null=True, verbose_name='Rodzaj')),
                ('timestamp', models.DateTimeField(blank=True, editable=False, verbose_name='Data dodania')),
                ('date_document', models.DateField(blank=True, null=True, verbose_name='Data dokumentu')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Numer dokumentu')),
                ('date_expiration', models.DateField(blank=True, null=True, verbose_name='Data ważności dokumentu')),
                ('date_termination', models.DateField(blank=True, null=True, verbose_name='Data wypowiedzenia')),
                ('access', models.IntegerField(choices=[(0, 'Prywatny'), (1, 'Publiczny')], default=1, verbose_name='Dostęp')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Dokument',
                'verbose_name_plural': 'historical Dokumenty',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGenre',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('symbol', models.CharField(max_length=32, verbose_name='Symbol')),
                ('name', models.CharField(max_length=1024, verbose_name='Nazwa')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Rodzaj urządzenia',
                'verbose_name_plural': 'historical Rodzaje urządzeń',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInspection',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('type', models.IntegerField(choices=[(1, 'Przegląd'), (2, 'Konserwacja')], default=1, verbose_name='Typ')),
                ('priority', models.IntegerField(choices=[(1, 'Niski'), (2, 'Normalny'), (3, 'Wysoki')], default=1, verbose_name='Priorytet')),
                ('duration_time', models.IntegerField(blank=True, null=True, verbose_name='Czas trwania')),
                ('duration_period', models.IntegerField(blank=True, choices=[(1, 'Godzin'), (2, 'Dni')], null=True, verbose_name='Czas trwania (okres)')),
                ('description', models.TextField(blank=True, verbose_name='Uwagi')),
                ('count_planned_events', models.IntegerField(verbose_name='Ilość planowanych zdarzeń')),
                ('cycle_value', models.IntegerField(blank=True, null=True, verbose_name='Wartość cyklu')),
                ('cycle_value_period', models.IntegerField(choices=[(1, 'Dni'), (2, 'Tygodni'), (3, 'Miesięcy'), (4, 'Lat')], default=1, verbose_name='Okres cyklu')),
                ('cycle_date_start', models.DateField(verbose_name='Data początkowa cyklu')),
                ('recurring_time', models.IntegerField(verbose_name='Nowe zgłoszenia - ilość dni przed')),
                ('recurring_period', models.IntegerField(choices=[(1, 'Dni'), (2, 'Miesięcy')], default=1, verbose_name='Nowe zgłoszenia - okres przed')),
                ('device_elements', models.TextField(blank=True, verbose_name='Części')),
                ('added_date', models.DateTimeField(blank=True, editable=False, verbose_name='Data dodania przeglądu')),
                ('modify_date', models.DateTimeField(blank=True, editable=False, verbose_name='Data edycji przeglądu')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Przegląd',
                'verbose_name_plural': 'historical Przeglądy',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMake',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Producent',
                'verbose_name_plural': 'historical Producenci',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMileage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(default='Licznik: ', max_length=255, verbose_name='Nazwa')),
                ('state_initial', models.IntegerField(null=True, verbose_name='Stan minimalny')),
                ('state', models.IntegerField(null=True, verbose_name='Stan licznika')),
                ('state_warning', models.IntegerField(verbose_name='Stan graniczny licznika')),
                ('warning', models.TextField(blank=True, max_length=255, null=True, verbose_name='Monit po przekroczeniu wartości granicznej')),
                ('state_max', models.IntegerField(verbose_name='Maksymalny stan licznika')),
                ('remarks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Uwagi')),
                ('remarks_ui', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Uwagi')),
                ('status', models.IntegerField(choices=[(0, 'Aktywny'), (1, 'Nieaktywny'), (2, 'Zakończony')], default=0, verbose_name='Status')),
                ('date', models.DateField(blank=True, editable=False, verbose_name='Data utworzenia')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Licznik',
                'verbose_name_plural': 'historical Liczniki',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalService',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('ticket_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Zgłoszenia')),
                ('document_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Dokumenty')),
                ('timestamp', models.DateTimeField(blank=True, editable=False, verbose_name='Data')),
                ('sort', models.IntegerField(choices=[(0, 'Wewnętrzne'), (1, 'Firma zewnętrzna')], verbose_name='Rodzaj')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
                ('status', models.IntegerField(choices=[(99, '---------'), (0, 'nowe'), (1, 'zapytanie ofertowe'), (2, 'akceptacja oferty'), (3, 'w realizacji'), (4, 'wykonane'), (5, 'zamknięte')], default=0, verbose_name='Status')),
                ('summation', models.TextField(blank=True, max_length=4096, verbose_name='Podsumowanie')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Data zakończenia')),
                ('planned_date_execute', models.DateField(blank=True, null=True, verbose_name='Planowana data wykonania')),
                ('date_execute', models.DateField(blank=True, null=True, verbose_name='Data wykonania')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Zlecenie',
                'verbose_name_plural': 'historical Zlecenia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTicket',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('device_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Urządzenia')),
                ('document_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Dokumenty')),
                ('created_ticket_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Data dodania')),
                ('timestamp', models.DateField(default=datetime.datetime.now, verbose_name='Data rozpoczęcia')),
                ('sort', models.IntegerField(choices=[(0, 'Sprawdzenie'), (1, 'Naprawa'), (2, 'Przegląd'), (3, 'Sprawdzenie bezpieczeństwa'), (4, 'Aktualizacja oprogramowania'), (5, 'Legalizacja'), (6, 'Wzorcowanie'), (7, 'Konserwacja')], default=0, verbose_name='Rodzaj zgłoszenia')),
                ('cyclic', models.BooleanField(default=False, verbose_name='Cykliczny?')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
                ('status', models.IntegerField(choices=[(99, '---------'), (0, 'Otwarte'), (1, 'Nowe'), (2, 'Zamknięte'), (3, 'Przeterminowane'), (4, 'Odrzucone'), (5, 'Anulowane'), (6, 'Planowane')], default=1, verbose_name='Status')),
                ('date_closing', models.DateField(blank=True, null=True, verbose_name='Data zamknięcia')),
                ('priority', models.IntegerField(choices=[(99, '----------'), (0, 'niski'), (1, 'normalny'), (2, 'wysoki'), (3, 'krytyczny')], default=1, verbose_name='Priorytet')),
                ('cost', models.CharField(blank=True, max_length=32, null=True, verbose_name='Koszt brutto')),
                ('summation', models.TextField(blank=True, max_length=4096, verbose_name='Podsumowanie')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Data zakończenia')),
                ('planned_date_finish', models.DateField(blank=True, null=True, verbose_name='Planowana data zakończenia')),
                ('planned_date_execute', models.DateField(blank=True, null=True, verbose_name='Planowana data wykonania')),
                ('date_execute', models.DateField(blank=True, null=True, verbose_name='Data wykonania')),
                ('inspection_type', models.IntegerField(choices=[(1, 'Przegląd'), (2, 'Konserwacja')], default=1, verbose_name='Typ przeglądu')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Zgłoszenie',
                'verbose_name_plural': 'historical Zgłoszenia',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('type', models.IntegerField(choices=[(1, 'Przegląd'), (2, 'Konserwacja')], default=1, verbose_name='Typ')),
                ('priority', models.IntegerField(choices=[(1, 'Niski'), (2, 'Normalny'), (3, 'Wysoki')], default=1, verbose_name='Priorytet')),
                ('duration_time', models.IntegerField(blank=True, null=True, verbose_name='Czas trwania')),
                ('duration_period', models.IntegerField(blank=True, choices=[(1, 'Godzin'), (2, 'Dni')], null=True, verbose_name='Czas trwania (okres)')),
                ('description', models.TextField(blank=True, verbose_name='Uwagi')),
                ('count_planned_events', models.IntegerField(verbose_name='Ilość planowanych zdarzeń')),
                ('cycle_value', models.IntegerField(blank=True, null=True, verbose_name='Wartość cyklu')),
                ('cycle_value_period', models.IntegerField(choices=[(1, 'Dni'), (2, 'Tygodni'), (3, 'Miesięcy'), (4, 'Lat')], default=1, verbose_name='Okres cyklu')),
                ('cycle_date_start', models.DateField(verbose_name='Data początkowa cyklu')),
                ('recurring_time', models.IntegerField(verbose_name='Nowe zgłoszenia - ilość dni przed')),
                ('recurring_period', models.IntegerField(choices=[(1, 'Dni'), (2, 'Miesięcy')], default=1, verbose_name='Nowe zgłoszenia - okres przed')),
                ('device_elements', models.TextField(blank=True, verbose_name='Części')),
                ('added_date', models.DateTimeField(auto_now_add=True, verbose_name='Data dodania przeglądu')),
                ('modify_date', models.DateTimeField(auto_now=True, verbose_name='Data edycji przeglądu')),
            ],
            options={
                'verbose_name': 'Przegląd',
                'verbose_name_plural': 'Przeglądy',
                'permissions': (('view_changelist_inspection', 'Może zobaczyć listę przeglądów'),),
            },
        ),
        migrations.CreateModel(
            name='InspectionDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Przegląd - urządzenie',
                'verbose_name_plural': 'Przegląd - urządzenia',
            },
        ),
        migrations.CreateModel(
            name='InspectionDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Przegląd - dokument',
                'verbose_name_plural': 'Przegląd - dokumenty',
            },
        ),
        migrations.CreateModel(
            name='InspectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Nazwa')),
                ('planned_date', models.DateField(verbose_name='Planowana data wykonania')),
                ('ticket_date', models.DateField(verbose_name='Data utworzenia zgłoszenia')),
                ('created_ticket_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='ID utworzonego zgłoszenia')),
            ],
            options={
                'verbose_name': 'Zdarzenie',
                'verbose_name_plural': 'Zdarzenia',
            },
        ),
        migrations.CreateModel(
            name='Kit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
                ('make', models.CharField(blank=True, max_length=255, null=True, verbose_name='Producent')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Model')),
                ('serial_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Numer seryjny')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
            ],
            options={
                'verbose_name': 'Wyposażenie',
                'verbose_name_plural': 'Wyposażenie/części',
            },
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nazwa')),
            ],
            options={
                'verbose_name': 'Producent',
                'verbose_name_plural': 'Producenci',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Mileage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Licznik: ', max_length=255, verbose_name='Nazwa')),
                ('state_initial', models.IntegerField(null=True, verbose_name='Stan minimalny')),
                ('state', models.IntegerField(null=True, verbose_name='Stan licznika')),
                ('state_warning', models.IntegerField(verbose_name='Stan graniczny licznika')),
                ('warning', models.TextField(blank=True, max_length=255, null=True, verbose_name='Monit po przekroczeniu wartości granicznej')),
                ('state_max', models.IntegerField(verbose_name='Maksymalny stan licznika')),
                ('remarks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Uwagi')),
                ('remarks_ui', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Uwagi')),
                ('status', models.IntegerField(choices=[(0, 'Aktywny'), (1, 'Nieaktywny'), (2, 'Zakończony')], default=0, verbose_name='Status')),
                ('date', models.DateField(auto_now=True, verbose_name='Data utworzenia')),
            ],
            options={
                'verbose_name': 'Licznik',
                'verbose_name_plural': 'Liczniki',
                'permissions': (('view_changelist_mileage', 'Może zobaczyć listę liczników'), ('update_mileage', 'Może wprowadzać licznik (serwis)'), ('reset_mileage', 'Może resetować licznik')),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Zgłoszenia')),
                ('document_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Dokumenty')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data')),
                ('sort', models.IntegerField(choices=[(0, 'Wewnętrzne'), (1, 'Firma zewnętrzna')], verbose_name='Rodzaj')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
                ('status', models.IntegerField(choices=[(99, '---------'), (0, 'nowe'), (1, 'zapytanie ofertowe'), (2, 'akceptacja oferty'), (3, 'w realizacji'), (4, 'wykonane'), (5, 'zamknięte')], default=0, verbose_name='Status')),
                ('summation', models.TextField(blank=True, max_length=4096, verbose_name='Podsumowanie')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Data zakończenia')),
                ('planned_date_execute', models.DateField(blank=True, null=True, verbose_name='Planowana data wykonania')),
                ('date_execute', models.DateField(blank=True, null=True, verbose_name='Data wykonania')),
            ],
            options={
                'verbose_name': 'Zlecenie',
                'verbose_name_plural': 'Zlecenia',
                'ordering': ['timestamp'],
                'permissions': (('view_changelist_service', 'Może zobaczyć listę Zleceń'), ('change_data_service', 'Może zmienić dane Zlecenia'), ('change_tickets_service', 'Może zmienić przypisane zgłoszenia'), ('add_comment_service', 'Może dodać komentarz do Zlecenia'), ('add_document_service', 'Może dodać dokument do Zlecenia'), ('change_summation_service', 'Może zmienić podsumowanie Zlecenia')),
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Urządzenia')),
                ('document_pks', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Dokumenty')),
                ('created_ticket_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data dodania')),
                ('timestamp', models.DateField(default=datetime.datetime.now, verbose_name='Data rozpoczęcia')),
                ('sort', models.IntegerField(choices=[(0, 'Sprawdzenie'), (1, 'Naprawa'), (2, 'Przegląd'), (3, 'Sprawdzenie bezpieczeństwa'), (4, 'Aktualizacja oprogramowania'), (5, 'Legalizacja'), (6, 'Wzorcowanie'), (7, 'Konserwacja')], default=0, verbose_name='Rodzaj zgłoszenia')),
                ('cyclic', models.BooleanField(default=False, verbose_name='Cykliczny?')),
                ('description', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Opis')),
                ('status', models.IntegerField(choices=[(99, '---------'), (0, 'Otwarte'), (1, 'Nowe'), (2, 'Zamknięte'), (3, 'Przeterminowane'), (4, 'Odrzucone'), (5, 'Anulowane'), (6, 'Planowane')], default=1, verbose_name='Status')),
                ('date_closing', models.DateField(blank=True, null=True, verbose_name='Data zamknięcia')),
                ('priority', models.IntegerField(choices=[(99, '----------'), (0, 'niski'), (1, 'normalny'), (2, 'wysoki'), (3, 'krytyczny')], default=1, verbose_name='Priorytet')),
                ('cost', models.CharField(blank=True, max_length=32, null=True, verbose_name='Koszt brutto')),
                ('summation', models.TextField(blank=True, max_length=4096, verbose_name='Podsumowanie')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Data zakończenia')),
                ('planned_date_finish', models.DateField(blank=True, null=True, verbose_name='Planowana data zakończenia')),
                ('planned_date_execute', models.DateField(blank=True, null=True, verbose_name='Planowana data wykonania')),
                ('date_execute', models.DateField(blank=True, null=True, verbose_name='Data wykonania')),
                ('inspection_type', models.IntegerField(choices=[(1, 'Przegląd'), (2, 'Konserwacja')], default=1, verbose_name='Typ przeglądu')),
            ],
            options={
                'verbose_name': 'Zgłoszenie',
                'verbose_name_plural': 'Zgłoszenia',
                'ordering': ['-timestamp'],
                'permissions': (('view_changelist_ticket', 'Może zobaczyć listę Zgłoszeń'), ('change_devices_ticket', 'Może zmienić zgłoszone urządzenia do Zgłoszenia'), ('change_details_ticket', 'Może edytować szczegóły Zgłoszenia'), ('change_description_ticket', 'Może zmienić opis Zgłoszenia'), ('change_summation_ticket', 'Może zmienić podsumowanie Zgłoszenia'), ('add_comment_ticket', 'Może dodać komentarz do Zgłoszenia'), ('add_document_ticket', 'Może dodać dokument do Zgłoszenia'), ('view_ticket_chart', 'Może oglądać wykres zgłoszeń')),
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nazwa')),
                ('unit', models.CharField(max_length=50, verbose_name='Krótka nazwa')),
            ],
            options={
                'verbose_name': 'Jednostka',
                'verbose_name_plural': 'Jednostki',
            },
        ),
    ]
